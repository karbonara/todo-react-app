{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/todo-react-app/src/components/list/list.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './list.scss';\nimport removeSvg from '../../assets/img/remove.svg';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(_ref) {\n  _s();\n\n  let {\n    items,\n    isRemovable,\n    handleOpenPopup,\n    onRemove\n  } = _ref;\n  const [remove, setRemove] = useState(true);\n\n  const removeList = item => {\n    onRemove(item);\n    setRemove(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames(item.className, {\n        'active': item.active\n      }),\n      onClick: handleOpenPopup,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        children: item.icon ? item.icon : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `badge badge--${item.color}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"list__remove-icon\",\n        src: removeSvg,\n        alt: \"Remove icon\",\n        onClick: () => removeList(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, item.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"MIgXGjbnAw/4awmstj1SCI8p6c0=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/artem/Desktop/todo-react-app/src/components/list/list.jsx"],"names":["React","useState","removeSvg","classNames","List","items","isRemovable","handleOpenPopup","onRemove","remove","setRemove","removeList","item","map","className","active","icon","color","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,SAASC,IAAT,OAAiE;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,eAAtB;AAAuCC,IAAAA;AAAvC,GAAmD;AAE7D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMU,UAAU,GAAIC,IAAD,IAAU;AACzBJ,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAHD;;AAIA,sBACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cACKL,KAAK,CAACQ,GAAN,CAAWD,IAAD,iBACP;AAEI,MAAA,SAAS,EAAET,UAAU,CAACS,IAAI,CAACE,SAAN,EAAiB;AAAE,kBAAUF,IAAI,CAACG;AAAjB,OAAjB,CAFzB;AAGI,MAAA,OAAO,EAAER,eAHb;AAAA,8BAKI;AAAA,kBAAIK,IAAI,CAACI,IAAL,GAAYJ,IAAI,CAACI,IAAjB,gBAAwB;AAAG,UAAA,SAAS,EAAG,gBAAeJ,IAAI,CAACK,KAAM;AAAzC;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBAAOL,IAAI,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AACI,QAAA,SAAS,EAAC,mBADd;AAEI,QAAA,GAAG,EAAEhB,SAFT;AAGI,QAAA,GAAG,EAAC,aAHR;AAII,QAAA,OAAO,EAAE,MAAMS,UAAU,CAACC,IAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,OACSA,IAAI,CAACM,IADd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA5BQd,I;;KAAAA,I;AA+BT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport './list.scss';\nimport removeSvg from '../../assets/img/remove.svg';\nimport classNames from 'classnames';\n\nfunction List({ items, isRemovable, handleOpenPopup, onRemove }) {\n\n    const [remove, setRemove] = useState(true);\n\n    const removeList = (item) => {\n        onRemove(item)\n        setRemove(false)\n    }\n    return (\n        <ul className=\"list\">\n            {items.map((item) => (\n                <li\n                    key={item.name}\n                    className={classNames(item.className, { 'active': item.active })}\n                    onClick={handleOpenPopup}\n                >\n                    <i>{item.icon ? item.icon : <i className={`badge badge--${item.color}`}></i>}</i>\n                    <span>{item.name}</span>\n                    <img\n                        className=\"list__remove-icon\"\n                        src={removeSvg}\n                        alt=\"Remove icon\"\n                        onClick={() => removeList(item)}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\n\nexport default List;"]},"metadata":{},"sourceType":"module"}